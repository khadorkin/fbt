// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test fbt transforms without the jsx transform [legacy buggy behavior] <fbt:pronoun> should insert a space character between two fbt constructs that don't neighbor raw text 1`] = `
"const fbt = require(\\"fbt\\");

fbt._(
  '__FBT__{\\"type\\":\\"table\\",\\"jsfbt\\":{\\"t\\":{\\"*\\":{\\"*\\":\\"You can add thesetags to anything.\\"},\\"_1\\":{\\"_1\\":\\"You can add this tag to anything.\\"}},\\"m\\":[null,null]},\\"desc\\":\\"\\",\\"project\\":\\"\\"}__FBT__',
  [fbt._plural(count), fbt._plural(count)]
);
"
`;

exports[`Test fbt transforms without the jsx transform nested in div 1`] = `
"const fbt = require(\\"fbt\\");

let x = (
  <div>
    {fbt._(
      '__FBT__{\\"type\\":\\"text\\",\\"jsfbt\\":\\"A nested string\\",\\"desc\\":\\"nested!\\",\\"project\\":\\"\\"}__FBT__'
    )}
  </div>
);
"
`;

exports[`Test fbt transforms without the jsx transform not nested 1`] = `
"const fbt = require(\\"fbt\\");

let x = fbt._(
  '__FBT__{\\"type\\":\\"text\\",\\"jsfbt\\":\\"A nested string\\",\\"desc\\":\\"nested!\\",\\"project\\":\\"\\"}__FBT__'
);
"
`;

exports[`Test fbt transforms without the jsx transform short bool syntax for doNotExtract attribute 1`] = `
"const fbt = require(\\"fbt\\");

let x = fbt._(
  '__FBT__{\\"type\\":\\"text\\",\\"jsfbt\\":\\"Test\\",\\"desc\\":\\"\\",\\"project\\":\\"\\"}__FBT__'
);
"
`;

exports[`Test fbt transforms without the jsx transform short bool syntax for number attribute 1`] = `
"const fbt = require(\\"fbt\\");

let x = fbt._(
  '__FBT__{\\"type\\":\\"table\\",\\"jsfbt\\":{\\"t\\":{\\"*\\":\\"{name}\\"},\\"m\\":[{\\"token\\":\\"name\\",\\"type\\":2}]},\\"desc\\":\\"\\",\\"project\\":\\"\\"}__FBT__',
  [fbt._param(\\"name\\", \\"name\\", [0])]
);
"
`;

exports[`Test fbt transforms without the jsx transform when using within template literals should dedupe plurals 1`] = `
"const fbt = require(\\"fbt\\");

fbt._(
  '__FBT__{\\"type\\":\\"table\\",\\"jsfbt\\":{\\"t\\":{\\"*\\":{\\"*\\":\\"There are {number} photos.\\"},\\"_1\\":{\\"_1\\":\\"There is 1 photo.\\"}},\\"m\\":[null,{\\"token\\":\\"number\\",\\"type\\":2,\\"singular\\":true}]},\\"desc\\":\\"desc...\\",\\"project\\":\\"\\"}__FBT__',
  [fbt._plural(num), fbt._plural(num, \\"number\\", hi())]
);
"
`;

exports[`Test fbt transforms without the jsx transform when using within template literals should work with a basic <fbt> 1`] = `
"const fbt = require(\\"fbt\\");

html\`<div>
  \${fbt._(
    '__FBT__{\\"type\\":\\"text\\",\\"jsfbt\\":\\"basic text\\",\\"desc\\":\\"some desc\\",\\"project\\":\\"some project\\"}__FBT__'
  )}
</div>\`;
"
`;

exports[`Test fbt transforms without the jsx transform when using within template literals should work with a nested <fbt> within an <fbt:param> 1`] = `
"const fbt = require(\\"fbt\\");

html\`<div>
  \${fbt._(
    '__FBT__{\\"type\\":\\"text\\",\\"jsfbt\\":\\"outer text {param text}\\",\\"desc\\":\\"some desc\\",\\"project\\":\\"some project\\"}__FBT__',
    [
      fbt._param(
        \\"param text\\",
        html\`<strong>
          \${fbt._(
            '__FBT__{\\"type\\":\\"text\\",\\"jsfbt\\":\\"inner text {inner param}\\",\\"desc\\":\\"inner string\\",\\"project\\":\\"\\"}__FBT__',
            [fbt._param(\\"inner param\\", \\"bold\\")]
          )}
        </strong>\`
      ),
    ]
  )}
</div>\`;
"
`;

exports[`Test fbt transforms without the jsx transform when using within template literals should work with basic <fbt> auto-parameterization 1`] = `
"const fbt = require(\\"fbt\\");

html\`<div>
  \${fbt._(
    '__FBT__{\\"type\\":\\"text\\",\\"jsfbt\\":\\"outer text {=bold text}\\",\\"desc\\":\\"some desc\\",\\"project\\":\\"some project\\"}__FBT__',
    [
      fbt._param(
        \\"=bold text\\",
        <strong>
          {fbt._(
            '__FBT__{\\"type\\":\\"text\\",\\"jsfbt\\":\\"bold text\\",\\"desc\\":\\"In the phrase: \\\\\\\\\\"outer text {=bold text}\\\\\\\\\\"\\",\\"project\\":\\"\\"}__FBT__'
          )}
        </strong>
      ),
    ]
  )}
</div>\`;
"
`;
